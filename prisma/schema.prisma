// LifeTuna Database Schema
// User priorities, tips, and activity tracking

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relationships
  priorities UserPriority[]
  tipViews   TipView[]
  completions TipCompletion[]
  
  @@map("users")
}

// User's priority rankings (from sortable cards)
model UserPriority {
  id       String @id @default(cuid())
  userId   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  category String // "career", "creative", "educational", etc.
  rank     Int    // 1 = highest priority, 2 = second, etc.
  
  createdAt DateTime @default(now())
  
  @@unique([userId, category])
  @@map("user_priorities")
}

// Tips/activities generated by LLM
model Tip {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String   // matches priority categories
  difficulty  String   // "easy", "medium", "hard"
  duration    Int      // estimated minutes
  llmPrompt   String   // the prompt used to generate this tip
  llmResponse Json     // full LLM response for reference
  
  createdAt   DateTime @default(now())
  
  // Relationships
  views       TipView[]
  completions TipCompletion[]
  
  @@map("tips")
}

// Track which tips were shown to user
model TipView {
  id        String   @id @default(cuid())
  userId    String
  tipId     String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tip       Tip      @relation(fields: [tipId], references: [id], onDelete: Cascade)
  
  viewedAt  DateTime @default(now())
  
  @@unique([userId, tipId])
  @@map("tip_views")
}

// Track which tips user completed
model TipCompletion {
  id          String   @id @default(cuid())
  userId      String
  tipId       String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tip         Tip      @relation(fields: [tipId], references: [id], onDelete: Cascade)
  
  completedAt DateTime @default(now())
  rating      Int?     // 1-5 star rating
  notes       String?  // user's notes about the experience
  
  @@unique([userId, tipId])
  @@map("tip_completions")
}
